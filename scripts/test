#!/usr/bin/python3

#
#  Licensed to the Apache Software Foundation (ASF) under one or more
#  contributor license agreements.  See the NOTICE file distributed with
#  this work for additional information regarding copyright ownership.
#  The ASF licenses this file to You under the Apache License, Version 2.0
#  (the "License"); you may not use this file except in compliance with
#  the License.  You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#

from plano import *

#ENV["MESSAGING_SERVICE_PORT"] = "5672"

enable_logging(level="warn")

sender = None
receiver = None

try:
    with working_env(QUARKUS_HTTP_HOST="localhost", QUARKUS_HTTP_PORT="8081"):
        sender = start_process("java -Dquarkus.http.port=8081 -jar sender/target/hello-world-quarkus-jms-sender-1.0.0-SNAPSHOT-runner.jar")

    with working_env(QUARKUS_HTTP_HOST="localhost", QUARKUS_HTTP_PORT="8082"):
        receiver = start_process("java -Dquarkus.http.port=8082 -jar receiver/target/hello-world-quarkus-jms-receiver-1.0.0-SNAPSHOT-runner.jar")

    while True:
        try:
            http_get("http://localhost:8081/health/ready")
            http_get("http://localhost:8082/health/ready")

            break
        except CalledProcessError:
            sleep(0.2)

    call("curl -X POST -d \"hello 1\" -H \"Content-type: text/plain\" http://localhost:8081/api/send")
    call("curl -X POST -d \"hello 2\" -H \"Content-type: text/plain\" http://localhost:8081/api/send")
    call("curl -X POST -d \"hello 3\" -H \"Content-type: text/plain\" http://localhost:8081/api/send")
    call("curl http://localhost:8082/api/receive")
    call("curl http://localhost:8082/api/receive")
    call("curl http://localhost:8082/api/receive")
finally:
    terminate_process(sender)
    terminate_process(receiver)
